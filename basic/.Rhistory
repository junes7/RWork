m1 <- rbind(m1,c(90,78,82,78))
m1 <- rbind(m1,c(99,89,78,90))
m1
rownames(m1) <- c("kim","lee","hong","jang")
m1
avg_name <- rowMeans(m1)
avg_name
avg_subject <- colMeans(m1)
avg_subject
m1 <- matrix(c(80,90,70,100),ncol=4)
colnames(m1) <- c("국어","영어","과학","수학")
m1 <- rbind(m1,c(80,99,78,72))
m1 <- rbind(m1,c(90,78,82,78))
m1 <- rbind(m1,c(99,89,78,90))
m1
rownames(m1) <- c("kim","lee","hong","jang")
m1
avg_name <- rowMeans(m1)
avg_name
avg_subject <- colMeans(m1)
avg_subject
myjumsuMat <- matrix(c(80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90),nrow = 4,byrow = T)
myjumsuMat
myjumsuMat <- matrix(c(80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90),nrow = 4,byrow = T)
myjumsuMat
colnames(myjumsuMat) <- c("국어","영어","과학","수학")
rownames(myjumsuMat) <- c("kim","lee","hong","jang")
myjumsuMat
avg_name <- rowMeans(myjumsuMat)
avg_name
avg_subject <- colMeans(myjumsuMat)
avg_subject
avg_name <- c(mean(myjumsuMat[1,]),mean(myjumsuMat[2,]),mean(myjumsuMat[3,]),mean(myjumsuMat[4,]))
avg_name
avg_subject <- c(mean(myjumsuMat[,1]),mean(myjumsuMat[,2]),mean(myjumsuMat[,3]),mean(myjumsuMat[,4]))
avg_subject
dataframeMat1 <- matrix(1:15,ncol=3,byrow = T)
dataframeMat1
dataframeMat2
dataframeMat2 <- data.frame
dataframeMat2
dataframeMat1 <- matrix(1:15,ncol=3,byrow = T)
dataframeMat1
mydataframe <- data.frame(dataframeMat1)
mydataframe
dataframeMat1[,1]
mydataframe[,1]
#matrix로 정의된 데이터를 dataframe으로 변경하여 작업하는 경우가 많음
#matrix의 1열만 char타입으로 변경
as.character(dataframeMat1[,1])
dataframeMat1
dataframeMat1[,1] <- as.character(dataframeMat1[,1])
dataframeMat1
#str함수는 dataframe내부의 데이터형을 볼 수 있는 함수
str(mydataframe)
mydataframe[,1] <- as.character(mydataframe[,1])
str(mydataframe)
mydataframe
mydataframe$X2
mydataframe$X3
#dataframe에 열을 추가
col4 <- c(1,1,1,1,1)
mydataframe$x4 <- col4
mydataframe
#필요한 곳에서 dataframe을 다시 matrix로 변환
dataframeMat2 <- as.matrix(mydataframe)
dataframeMat2
#dataframe만들기 - 1. matrix를 dataframe으로 변환
#2.벡터를 여러 개 만들어서 dataframe을 작성
eng <- c(100,99,90)
math <- c(100,99,100)
mydf1 <- data.frame(eng,math)
mydf1
mean(mydf1$eng)
mean(mydf1$math)
#3.dataframe을 직접 정의하는 방법
mydf2 <- data.frame(eng=c(100,100,100),math=c(90,90,90))
mydf2
price <- c(1800,1500,3000)
sellQty <- c(24,38,13)
mydf3 <- data.frame(price,sellQty)
mydf3
#
m <- matrix(1:15,ncol = 3,byrow = T)
m
t(m)
m
d <- data.frame(m)
d
d <- t(d)
d
m <- t(m)
m
mydf3 <- t(mydf3)
mydf3
mean(mydf3$price)
mydf3
mydf3 <- t(mydf3)
mydf3
mean(mydf3$price)
mean(mydf1$eng)
mean(mydf3$price)
mydf1
mydf3
price <- c(1800,1500,3000)
sellQty <- c(24,38,13)
mydf3 <- data.frame(price,sellQty)
mydf3
mean(mydf3$price)
mean(mydf3$sellQty)
fruit <- c("사과","딸기","수박")
price <- c(1800,1500,3000)
sellQty <- c(24,38,13)
mydf3 <- data.frame(price,sellQty)
mydf3
fruit <- c("사과","딸기","수박")
price <- c(1800,1500,3000)
sellQty <- c(24,38,13)
mydf3 <- data.frame(fruit,price,sellQty)
mydf3
mean(mydf3$price)
mean(mydf3$sellQty)
mydf3 <- t(mydf3)
mydf3
mydf3 <- t(mydf3)
mydf3
mean(mydf3$price)
mean(mydf3$sellQty)
fruit <- c("사과","딸기","수박")
price <- c(1800,1500,3000)
sellQty <- c(24,38,13)
mydf3 <- data.frame(fruit,price,sellQty)
mydf3
install.packages("readxl")
mydf3$fruit
제품 <- c("사과","딸기","수박")
가격 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
mydf3 <- data.frame(제품,가격,판매량)
mydf3
제품 <- c("사과","딸기","수박")
가격 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
mydf3 <- data.frame(제품,가격,판매량)
mydf3
mean(mydf3$가격)
mean(mydf3$판매량)
mydf3$제품
mean(mydf3$가격,mydf3$판매량)
ㅜㅕㅡ <- 88
num <- 88
print("다시")
print("합격")
num <- 88
if(num>=90){
print("합격")
}else{
print("다시")
}
if(num>=90){
print("수")
}else if(num>=80){
print("우")
}else{
print("다시")
}
#for구문을 이용한다.
myv <- c(1:10)
myv <- c(1:10)
for (i in myv) {
print(i)
}
?sum
mys <- c(1:10)
for (i in mys) {
sum(i)
}
print(i)
for (i in mys) {
print(i)
}
sum(1:10)
sum <- 0;
for (i in mys) {
sum = sum + i;
}
print(sum)
#1부터 10까지 합구하기 - ver2
myv2-<c(1:100)
myv2 <- c(1:100)
sum(myv2)
csv_exam <- read.csv("csv_exam.csv")
csv_exam
mdf = read.csv("csv_exam.csv")
mdf
mdf <- read.csv("csv_exam.csv")
mdf
mdf[2,]
#dataframe에서 조건에 만족하는 데이터를 조회
m <- matrix(1:20,ncol = 4)
m
d <- data.frame(m)
d
myresult <- d[d$x3>=13,]
myresult
myresult <- d[d$x3>=13,]
myresult
d <- data.frame(m)
d
myresult <- d[d$x3>=13,]
myresult
m <- matrix(1:20,ncol = 4)
m
d <- data.frame(m)
d
myresult <- d[d$x3>=13,]
myresult
source('C:/iot/work/RWork/csvTest.R', encoding = 'UTF-8')
myresult <- d[d$X3>=13,]
myresult
write.csv(myresult,file="result.csv")
r1 <- read.csv("csv_exam.csv")
r1
d <- data.frame(r1)
d
myresult1 <-d[d$science>=80,]
myresult1
mytotal <-
sum
sum
mytotal <- c(,,sum(d$math),sum(d$english),sum(d$science))
mytotal <- c("","",sum(d$math),sum(d$english),sum(d$science))
mytotal
mytotal <- c(0,0,sum(d$math),sum(d$english),sum(d$science))
mytotal
d[myresult1]
d["myresult1"]
d["mytotal"] = mytotal
d
myresult1["mytotal"] = mytotal
myresult1
r1 <- read.csv("csv_exam.csv")
r1
d <- data.frame(r1)
d
myresult1 <-d[d$science>=80,]
myresult1
mytotal <- c(0,0,sum(myresult1$math),sum(myresult1$english),sum(myresult1$science))
mytotal
myresult1["mytotal"] = mytotal
myresult1
mytotal
? cbind.data.frame
myresult1 = cbind.data.frame(mytotal);
myresult1
myresult2 <- rbind.data.frame(myresult1,mytotal);
myresult2
r1 <- read.csv("csv_exam.csv")
r1
d <- data.frame(r1)
d
myresult1 <-d[d$science>=80,]
myresult1
mytotal <- c(0,0,sum(myresult1$math),sum(myresult1$english),sum(myresult1$science))
mytotal
myresult2 <- rbind.data.frame(myresult1,mytotal);
myresult2
myresult1[,1]
myresult1[1,]
myresult1[1,(2:5)]
myresult1[1,(3:5)]
sum(myresult1[1,(3:5)])
sum(myresult1[,(3:5)])
rowSums(myresult1[,(3:5)])
mytotal <- rowSums(myresult1[,(3:5)])
myresult1["mytotal"]=cbind.data.frame(mytotal);
myresult1
rowMeans(myresult1[,(3:5)])
mytotal <- rowSums(myresult1[,(3:5)])
myresult1["mytotal"]=cbind.data.frame(mytotal);
myresult1
myavg <- rowMeans(myresult1[,(3:5)])
myresult1["myavg"]=cbind.data.frame(myavg);
myresult1
write.csv(myresult1,file="result1.csv")
myresult1
myresult1
myresult1 <- myresult1[-myresult1$mytotal]
myresult1
myresult1 <- myresult1[,7]
myresult1 <- myresult1[,-7]
myresult1
myresult1["myavg"]=cbind.data.frame(myavg);
myresult1
myresult1 <-d[d$science>=80,]
myresult1
mytotal <- rowSums(myresult1[,(3:5)])
myresult1["mytotal"]=cbind.data.frame(mytotal);
myresult1
myavg <- rowMeans(myresult1[,(3:5)])
myresult1["myavg"]=cbind.data.frame(myavg);
myresult1
myresult1 <- myresult1[,-7]
myresult1
sum <- 0;
for (i in myv1) {
sum = sum + i;
}
sum <- 0;
for (i in myv) {
sum = sum + i;
}
myv <- c(1:10)
for (i in myv) {
print(i)
}
#1부터 10까지 합구하기 - ver1
sum <- 0;
for (i in myv) {
sum = sum + i;
}
print(sum)
myresult1[1,(3:5)]
myresult1[1,(3)]
for (i in myresult1) {
for(j in 3:5){
sum = sum + myresult1[i,(j)]
}
mytotal[i] = sum
}
mytotal[0]
mytotal[1]
mytotal[2]
for (i in 1:4) {
for(j in 3:5){
sum = sum + myresult1[i,(j)]
}
mytotal[i] = sum
}
for (i in myreult1) {
for(j in 3:5){
sum = sum + myresult1[i,(j)]
}
mytotal[i] = cbind(sum)
}
for (i in myresult1) {
for(j in 3:5){
sum = sum + myresult1[i,(j)]
}
mytotal[i] = cbind(sum)
}
mytotal[2]
for (i in myresult1) {
for(j in 3:5){
sum = sum + myresult1[i,(j)]
}
mytotal[i] = cbind(sum)
i = i+1
}
mytotal[2]
mytotal[1]
for (i in myresult1) {
for(j in 3:5){
sum[i] = sum[i] + myresult1[i,(j)]
}
mytotal <- cbind(sum)
}
mytotal[1]
myresult1[1,(3)]
for (i in myresult1) {
for(j in 3:5){
sum[i] = sum[i] + myresult1[i,j]
}
mytotal <- cbind(sum)
}
mytotal[1]
for (i in myresult1) {
for(j in 3:5){
sum[i] = sum[i] + myresult1[i,j]
}
mytotal[i] = sum[i]
}
mytotal[1]
myresult1[1,3]
myresult1[1,4]
for (i in myresult1) {
for(j in 3:5){
sum = sum + myresult1[i,j]
}
sum
mytotal[i] = sum
mytotal[i]
}
sum
sum <- 0
for (i in myresult1) {
for(j in 3:5){
sum = sum + myresult1[i,j]
}
sum
mytotal[i] = sum
mytotal[i]
}
sum
mytotal[i]
sum <- 0
sum
sum = sum + myresult1[i,j]
sum = sum + myresult1[1,4]
sum
sum = sum + myresult1[1,(4)]
sum
myresult1[1,4]
sum <- 0
sum
sum = sum + myresult1[1,(3)]
sum
sum <- 0
sum
sum = sum + myresult1[i,(j)]
sum
for (i in myresult1) {
for(j in 3:5){
sum = sum + myresult1[i,(j)]
}
sum
mytotal[i] = sum
}
mytotal[1]
sum
for (i in myresult1) {
i
i in myresult1
i
sum <- 0
i <- 0
sum
i
for (i in myresult1) {
for(j in 3:5){
sum = sum + myresult1[i,(j)]
}
sum
mytotal[i] = sum
}
sum
mytotal <- rowSums(myresult1[,(3:5)])
mytotal
mytotal <- c(myresult1$math)+c(myresult1$english)+c(myresult1$science)
mytotal
myavg <- round((c(myresult1$math)+c(myresult1$english)+c(myresult1$science))/3,2)
myavg
mytotal
myavg
myresult1=data.frame(myresult1,mytotal,myavg);
myresult1
#컬럼 지울때 사용
myresult1 <- myresult1[,-7]
myresult1
myresult1$mytotal = myresult1$math+myresult1$english+myresult1$science
myresult1$mytotal
myresult$myavg = round((myresult1$mytotal)/3,2)
mytotal
myresult1$mytotal <- c(myresult1$math)+c(myresult1$english)+c(myresult1$science)
myresult1$mytotal
myavg <- round(mytotal/3,2)
myavg
myresult1$mytotal = myresult1$math+myresult1$english+myresult1$science
myresult$myavg = round((myresult1$mytotal)/3,2)
myresult$myavg = round(myresult1$mytotal/3,2)
myresult$myavg = myresult1$mytotal/3
myresult1$mytotal
myresult$myavg = (myresult1$mytotal)/3
myresult$myavg = c(myresult1$mytotal)/3
myresult1$mytotal
myresult1$myavg = c(myresult1$mytotal)/3
myresult1$mytotal = myresult1$math+myresult1$english+myresult1$science
myresult1$mytotal
myresult1$myavg = c(myresult1$mytotal)/3
myresult1
myresult1$myavg = myresult1$mytotal/3
myresult1
myavg <- round(mytotal/3,2)
myavg
mydatar <- read.csv("csv_exam.csv")
mydatar
mydata <- data.frame(mydatar)
mydata
mydataresult <-mydata[mydata$science>=80,]
mydataresult
sum(mydataresult[,c(3,5)])
mydataresult[,c(3,5)]
mydataresult[,c(4,6)]
mydataresult[,c(3,6)]
mydataresult[,c(3,5)]
mydataresult
mydataresult[,c(3:5)]
sum(mydataresult[,c(3:5)])
mydataresult$mytotal <- as.numeric(mydataresult$math + mydataresult$english + mydataresult$science)
mydataresult
mydataresult <-mydata[mydata$science>=60,]
mydataresult
mydataresult$mytotal <- as.numeric(mydataresult$math + mydataresult$english + mydataresult$science)
mydataresult
mydataresult <-mydata[mydata$science>=80,]
mydataresult
mydataresult$mytotal <- as.numeric(mydataresult$math + mydataresult$english + mydataresult$science)
mydataresult
mydataresult$myavg <- as.numeric(mydataresult$mytotal/3)
mydataresult
mydataresult$myavg <- round(as.numeric(mydataresult$mytotal/3),2)
mydataresult
